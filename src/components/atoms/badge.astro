---
// Badge atom component - 3 variants
export interface Props {
  variant?: 'solid' | 'outline' | 'soft';
  color?: 'primary' | 'secondary' | 'success' | 'warning' | 'error' | 'neutral';
  size?: 'sm' | 'md' | 'lg';
  class?: string;
  removable?: boolean;
  onRemove?: () => void;
}

const {
  variant = 'solid',
  color = 'primary',
  size = 'md',
  class: className = '',
  removable = false,
  onRemove,
} = Astro.props;

const classes = [
  'badge',
  `badge--${variant}`,
  `badge--${color}`,
  `badge--${size}`,
  removable && 'badge--removable',
  className
].filter(Boolean).join(' ');
---

<span class={classes}>
  <slot />
  {removable && (
    <button type="button" class="badge__remove" aria-label="Remove">
      <svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <line x1="18" y1="6" x2="6" y2="18"></line>
        <line x1="6" y1="6" x2="18" y2="18"></line>
      </svg>
    </button>
  )}
</span>

<style>
  .badge {
    display: inline-flex;
    align-items: center;
    gap: var(--space-1);
    font-family: var(--font-family-body);
    font-weight: var(--font-weight-medium);
    line-height: var(--line-height-none);
    border-radius: var(--radius-full);
    white-space: nowrap;
    transition: var(--transition-all);
  }

  /* Size variants */
  .badge--sm {
    padding: var(--space-1) var(--space-2);
    font-size: var(--font-size-xs);
    height: var(--size-5);
  }

  .badge--md {
    padding: var(--space-1_5) var(--space-3);
    font-size: var(--font-size-sm);
    height: var(--size-6);
  }

  .badge--lg {
    padding: var(--space-2) var(--space-4);
    font-size: var(--font-size-base);
    height: var(--size-8);
  }

  /* Solid variant */
  .badge--solid.badge--primary {
    background-color: var(--color-primary-500);
    color: var(--text-inverse);
  }

  .badge--solid.badge--secondary {
    background-color: var(--color-secondary-500);
    color: var(--text-inverse);
  }

  .badge--solid.badge--success {
    background-color: var(--color-success-500);
    color: var(--text-inverse);
  }

  .badge--solid.badge--warning {
    background-color: var(--color-warning-500);
    color: var(--text-inverse);
  }

  .badge--solid.badge--error {
    background-color: var(--color-error-500);
    color: var(--text-inverse);
  }

  .badge--solid.badge--neutral {
    background-color: var(--color-neutral-600);
    color: var(--text-inverse);
  }

  /* Outline variant */
  .badge--outline {
    background-color: transparent;
    border: var(--border) solid;
  }

  .badge--outline.badge--primary {
    border-color: var(--color-primary-500);
    color: var(--color-primary-700);
  }

  .badge--outline.badge--secondary {
    border-color: var(--color-secondary-500);
    color: var(--color-secondary-700);
  }

  .badge--outline.badge--success {
    border-color: var(--color-success-500);
    color: var(--color-success-700);
  }

  .badge--outline.badge--warning {
    border-color: var(--color-warning-500);
    color: var(--color-warning-700);
  }

  .badge--outline.badge--error {
    border-color: var(--color-error-500);
    color: var(--color-error-700);
  }

  .badge--outline.badge--neutral {
    border-color: var(--color-neutral-400);
    color: var(--color-neutral-700);
  }

  /* Soft variant */
  .badge--soft.badge--primary {
    background-color: var(--color-primary-100);
    color: var(--color-primary-800);
  }

  .badge--soft.badge--secondary {
    background-color: var(--color-secondary-100);
    color: var(--color-secondary-800);
  }

  .badge--soft.badge--success {
    background-color: var(--color-success-100);
    color: var(--color-success-800);
  }

  .badge--soft.badge--warning {
    background-color: var(--color-warning-100);
    color: var(--color-warning-800);
  }

  .badge--soft.badge--error {
    background-color: var(--color-error-100);
    color: var(--color-error-800);
  }

  .badge--soft.badge--neutral {
    background-color: var(--color-neutral-100);
    color: var(--color-neutral-800);
  }

  /* Dark theme adjustments */
  [data-theme="dark"] .badge--soft.badge--primary {
    background-color: var(--color-primary-900);
    color: var(--color-primary-200);
  }

  [data-theme="dark"] .badge--soft.badge--secondary {
    background-color: var(--color-secondary-900);
    color: var(--color-secondary-200);
  }

  [data-theme="dark"] .badge--soft.badge--success {
    background-color: var(--color-success-900);
    color: var(--color-success-200);
  }

  [data-theme="dark"] .badge--soft.badge--warning {
    background-color: var(--color-warning-900);
    color: var(--color-warning-200);
  }

  [data-theme="dark"] .badge--soft.badge--error {
    background-color: var(--color-error-900);
    color: var(--color-error-200);
  }

  [data-theme="dark"] .badge--soft.badge--neutral {
    background-color: var(--color-neutral-800);
    color: var(--color-neutral-200);
  }

  /* Remove button */
  .badge__remove {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0;
    margin: 0;
    margin-left: var(--space-1);
    background: none;
    border: none;
    border-radius: var(--radius-full);
    cursor: pointer;
    color: inherit;
    opacity: var(--opacity-70);
    transition: var(--transition-all);
    width: var(--size-4);
    height: var(--size-4);
  }

  .badge__remove:hover {
    opacity: var(--opacity-100);
    background-color: rgba(255, 255, 255, 0.2);
  }

  .badge__remove:focus-visible {
    outline: 1px solid currentColor;
    outline-offset: 1px;
  }

  /* Hover effects */
  .badge--solid:hover {
    transform: translateY(-1px);
    box-shadow: var(--shadow-sm);
  }

  .badge--outline:hover {
    transform: translateY(-1px);
    box-shadow: var(--shadow-sm);
  }

  .badge--soft:hover {
    transform: translateY(-1px);
  }
</style>